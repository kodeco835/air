{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodePath, traverse, types as t } from '@babel/core';\n\nfunction isPlatformSelect(path: NodePath<t.CallExpression>): boolean {\n  return (\n    t.isMemberExpression(path.node.callee) &&\n    t.isIdentifier(path.node.callee.object) &&\n    t.isIdentifier(path.node.callee.property) &&\n    path.node.callee.object.name === 'Platform' &&\n    path.node.callee.property.name === 'select' &&\n    t.isObjectExpression(path.node.arguments[0])\n  );\n}\n\nexport type UniversalPlatformPluginOptions = {\n  platform: string;\n};\n\nexport default function(api: any, options: UniversalPlatformPluginOptions) {\n  const { platform } = options;\n  if (!platform) {\n    throw new Error('babel-plugin-react-native-platform: \"platform\" option must be defined');\n  }\n\n  const collapseTestVisitor = {\n    /**\n     * Transforms static ID values for Terser to analyze\n     * `__DEV__ => <true | false>`\n     * `__PLATFORM__ => <\"ios\" | \"android\" | \"web\" | string>`\n     */\n    Identifier(p: NodePath<t.Identifier>) {\n      // Only transform if the pattern is _not_ being defined.\n      // This is important if someone tries to redefine a global.\n      if (!t.isVariableDeclarator(p.parent)) {\n        if (p.node.name === '__PLATFORM__') {\n          p.replaceWith(t.stringLiteral(platform));\n        }\n      }\n    },\n    /**\n     * Transforms member expressions for Terser to analyze\n     * `process.env.NODE_ENV => <true | false>`\n     * `Platform.OS => <\"ios\" | \"android\" | \"web\" | string>`\n     */\n    MemberExpression(p: NodePath<t.MemberExpression>) {\n      if (!t.isAssignmentExpression(p.parent)) {\n        if (p.matchesPattern('Platform.OS')) {\n          p.replaceWith(t.stringLiteral(platform));\n        }\n      }\n    },\n  };\n\n  function destroyBranch(p: NodePath<t.IfStatement | t.ConditionalExpression>) {\n    // @ts-ignore\n    traverse['explode'](collapseTestVisitor);\n    // @ts-ignore\n    traverse['node'](p.node, collapseTestVisitor, p.scope, undefined, p, {\n      consequent: true,\n      alternate: true,\n    });\n\n    if (p.node.test.type === 'BooleanLiteral') {\n      // leaves a lexical scope, but oh well\n      if (p.node.test.value) {\n        p.replaceWith(p.node.consequent);\n      } else if (p.node.alternate) {\n        p.replaceWith(p.node.alternate);\n      } else {\n        p.remove();\n      }\n    }\n  }\n\n  return {\n    name: 'Remove unused platforms from the Platform module of react-native',\n    visitor: {\n      IfStatement: destroyBranch,\n      ConditionalExpression: destroyBranch,\n      // Catch remaining refs such as: console.log(\"Platform: \", Platform.OS);\n      Identifier: collapseTestVisitor.Identifier,\n      MemberExpression: collapseTestVisitor.MemberExpression,\n      CallExpression(path: NodePath<t.CallExpression>) {\n        if (!isPlatformSelect(path)) {\n          return;\n        }\n        const platformsSpecs = (path.node.arguments[0] as unknown) as t.ObjectExpression;\n        let canStripPlatformSelect = true;\n        let targetCase: t.ObjectProperty | undefined;\n        let defaultCase: t.ObjectProperty | undefined;\n        const additionalProperties: t.ObjectExpression['properties'] = [];\n        platformsSpecs.properties.forEach(property => {\n          if (t.isObjectProperty(property) && t.isIdentifier(property.key)) {\n            if (property.key.name === 'default') {\n              defaultCase = property;\n            } else if (property.key.name === platform) {\n              targetCase = property;\n            }\n          } else {\n            canStripPlatformSelect = false;\n            additionalProperties.push(property);\n          }\n        });\n        // If we got an exact match, we can strip the rest\n        if (targetCase) {\n          canStripPlatformSelect = true;\n        }\n        if (!targetCase && !defaultCase && canStripPlatformSelect) {\n          path.replaceWithSourceString('undefined');\n        } else if (canStripPlatformSelect && (targetCase || defaultCase)) {\n          path.replaceWith((targetCase || defaultCase)!.value as any);\n        } else {\n          platformsSpecs.properties = [targetCase || defaultCase, ...additionalProperties].filter(\n            Boolean\n          ) as t.ObjectExpression['properties'];\n        }\n      },\n    },\n  };\n}\n"]}