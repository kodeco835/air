#!/usr/bin/env node
'use strict';

const childProcess = require('child_process');
const path = require('path');
const process = require('process');

const args = process.argv.slice(2);

// If the command is used like `yarn build plugin`, set the --build option to point to plugin/tsconfig.json
if (args[0] === 'plugin') {
  args.shift();
  args.unshift('--build', `${process.cwd()}/plugin`);
}

// Run in watch mode when not running on CI or in not in non-interactive
if (!process.env.CI && !process.env.EXPO_NONINTERACTIVE && require.main === module.parent) {
  args.push('--watch');
}

childProcess.spawnSync(path.join(__dirname, 'expo-module-tsc'), args, { stdio: 'inherit' });

/*
#!/usr/bin/env bash

set -eo pipefail

script_dir="$(dirname "$0")"

args=("$@")

# If the command is used like `yarn build plugin`, set the --build option to point to plugin/tsconfig.json
if [ "$1" == "plugin" ]; then
  # `--build` must be the first argument, so reset the array
  args=()
  args+=("--build")
  args+=("$(pwd)/plugin")
  # Push the rest of the arguments minus the `plugin` arg
  args+=("${@:2}")
fi

if [[ -t 1 && (-z "$CI" && -z "$EXPO_NONINTERACTIVE") ]]; then
  args+=("--watch")
fi

"$script_dir/expo-module-tsc" "${args[@]}"
*/
