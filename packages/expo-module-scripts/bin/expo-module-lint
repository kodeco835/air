#!/usr/bin/env node
'use strict';

const childProcess = require('child_process');
const fs = require('fs');
const path = require('path');
const process = require('process');

const args = process.argv.slice(2);

// If the command is used like `yarn lint plugin` then set the target to `plugin/src`
if (args[0] === 'plugin') {
  args.shift();
  args.push('plugins/src');

  if (!fs.existsSync(path.join(process.cwd(), 'plugin'))) {
    // Good DX cuz Expo
    console.log(
      `\n\x1b[33mThe \`plugin/src\` folder does not exist in this project; please create it and try again.\x1b[0m\n\n`
    );
    process.exit();
  }
} else {
  args.unshift('src');
}

childProcess.spawnSync(path.join(__dirname, 'expo-module-eslint'), args, { stdio: 'inherit' });

/*
#!/usr/bin/env bash

set -eo pipefail

script_dir="$(dirname "$0")"

args=()

# If the command is used like `yarn lint plugin` then set the target to `plugin/src`
if [ "$1" == "plugin" ]; then
  args+=("plugin/src")
  # Push the rest of the arguments minus the `plugin` arg
  args+=("${@:2}")
  if ! [[ -d "$(pwd)/plugin" ]]; then
    # Good DX cuz Expo
    printf "\n\033[1;33mThe \`plugin/src\` folder does not exist in this project; please create it and try again.\033[0m\n\n"
    exit 0
  fi
else
  args+=("src")
  args+=("$@")
fi


"$script_dir/expo-module-eslint" "${args[@]}"
*/
